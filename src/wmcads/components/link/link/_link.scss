// Included the a tag too incase dev forgets to add .wmcads-link class.
// The a:not([class*="wmcads-"]) line makes sure we don't target any wmcads components that are using the a tag such as a button as a link
// The a[class*="wmcads-col-"] line is to orrived the above not line, as a wmcads-col tag as an 'a' is fine to treat as normal tag
.wmcads-link {
  @at-root a:not([class*="wmcads-"]),
  & {
    display: inline-block;
    color: get-color(cta);
    font-weight: bold;
    text-decoration: underline;
    cursor: pointer;

    &:visited {
      color: get-color(cta-active);
    }

    &:hover {
      color: get-color(cta-active, 40, dark);
    }
  }

  h1,
  h2,
  h3 {
    color: get-color(cta, 10, dark);
  }

  &--with-chevron {
    display: inline-flex;

    // prevent icon resizing
    .wmcads-link__chevron {
      flex: 0 0 1rem;
    }
  }

  &__chevron {
    width: 1.5rem;
    height: 1rem;
    fill: get-color(primary);

    &--left {
      margin-right: $size-xsm;
      transform: rotate(180deg);
    }

    &--right {
      margin-left: $size-xsm;
    }

    &--down {
      margin-left: $size-xsm;
      transform: rotate(90deg);
    }
  }
}

a {
  h1,
  h2,
  h3 {
    color: get-color(cta);
  }
}


// red more icon
.hvr-icon-hang {
  display: inline-block;
  transform: perspective(1px) translateZ(0);
  border: 0;
  color: get-color(secondary);
  background: none;
  text-decoration: none;
  vertical-align: middle;

  .hvr-icon {
    color: get-color(primary);
  }

}

.hvr-icon-hang[aria-expanded="false"] {
  &:after {
    content: attr(data-html-text);
    color: get-color(cta);
  }

  &:hover::after {
    color: get-color(cta-active, 40, dark);
  }
}

.hvr-icon-hang[aria-expanded="true"] {

  .hvr-icon {
    transform: rotate(270deg);
  }

  &:after {
    content: "View less";
  }
}

.collapse {
  display: block;
  max-height: 0;
  overflow: hidden;

  &.show {
    max-height: 99em;
  }
}





.disable-link {
  pointer-events: none;
}

.wdgt {
  &-single-panel,
  &-panel-content {
    display: none;
    animation: fade 0.5s ease-in-out;
    &.active {
      display: block;
    }
  }

  &-tab-labels > li.wdgt-tab {
    margin: 6px 20px 6px 0;
    @media screen and (max-width: 768px) {
      margin: 15px 0;
      display: block;
      &:last-of-type {
        margin-bottom: 6px;
      }
    }
    &.active {
      a:before {
        height: 4px;
        visibility: visible;
        transform: none;
      }
    }
    a {
      padding: 0 40px 0 0;
      &:hover {
        color: unset;
      }
    }
  }

  &-panels {
    padding-top: 30px;
    border-top: 1px solid getColor(secondary, 40);
  }

  &-icon-link {
    position: relative;
    padding: 5px 0;
    display: inline-block;

    a {
      color: getColor(secondary);
      text-decoration: none;

      &:before {
        content: '';
        position: absolute;
        width: 100%;
        height: 3px;
        bottom: -7px;
        left: 0;
        background-color: #f58025;
        visibility: hidden;
        transform: scaleX(0);
        transition: 0.3s ease-in-out;
      }
      &:hover:before {
        visibility: visible;
        transform: scaleX(1);
      }
    }

    .icon {
      background-image: url('$*cdn/img/share.png');
      width: 28px;
      height: 26px;
      background-size: cover;
      display: inline-block;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);

      &-text {
        margin-left: 40px;
      }
    }

    .fal {
      position: absolute;
      font-size: 12px;
      font-weight: 400;
      color: getColor(primary);
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
  }
}
